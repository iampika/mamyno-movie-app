{"version":3,"sources":["src/scss/base/_typography.scss","src/scss/_normalize.scss","src/scss/base/_base.scss","src/scss/abstracts/_mixins.scss","src/scss/abstracts/_include-media.scss","src/scss/base/_helpers.scss","src/scss/abstracts/_variables.scss","src/scss/components/_buttons.scss","src/scss/layout/_main.scss","src/scss/layout/_header.scss","src/scss/layout/_hero.scss","src/scss/_themes.scss"],"names":[],"mappings":"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","file":"app.13448135.css","sourceRoot":"..","sourcesContent":["html {\r\n\t@include font-size(5, mobile, true, true);\r\n\t@if ( get-font-size(5, desktop) != get-font-size(5, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(5, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nbody {\r\n\tcolor: color(typography, 2);\r\n\tfont-size: 1rem;\r\n}\r\n\r\nbody,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n\t@include font-family(base);\r\n}\r\n\r\na {\r\n\t@include anchor-aspect(main);\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6,\r\n.h1, .h2, .h3, .h4, .h5, .h6 {\r\n\tclear: both;\r\n\tcolor: color(typography, 1);\r\n\t@if ( get-font-family(heading) != get-font-family(base) ) {\r\n\t\t@include font-family(heading);\r\n\t}\r\n\t@include font-weight(medium);\r\n}\r\n\r\nh1,\r\n.h1 {\r\n\t@include font-size(1, mobile, true, true, true);\r\n\t@if ( get-font-size(1, desktop) != get-font-size(1, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(1, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nh2,\r\n.h2 {\r\n\t@include font-size(2, mobile, true, true, true);\r\n\t@if ( get-font-size(2, desktop) != get-font-size(2, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(2, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nh3,\r\n.h3,\r\nblockquote {\r\n\t@include font-size(3, mobile, true, true, true);\r\n\t@if ( get-font-size(3, desktop) != get-font-size(3, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(3, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nh4,\r\nh5,\r\nh6,\r\n.h4,\r\n.h5,\r\n.h6 {\r\n\t@include font-size(4, mobile, true, true, true);\r\n\t@if ( get-font-size(4, desktop) != get-font-size(4, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(4, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@include media( '<=medium' ) {\r\n\r\n\t.h1-mobile {\r\n\t\t@include font-size(1, mobile, true, true, true);\r\n\t}\r\n\r\n\t.h2-mobile {\r\n\t\t@include font-size(2, mobile, true, true, true);\r\n\t}\r\n\r\n\t.h3-mobile {\r\n\t\t@include font-size(3, mobile, true, true, true);\r\n\t}\r\n\r\n\t.h4-mobile,\r\n\t.h5-mobile,\r\n\t.h6-mobile {\r\n\t\t@include font-size(4, mobile, true, true, true);\r\n\t}\r\n}\r\n\r\n.text-light {\r\n\tcolor: color(typography, 2i);\r\n\r\n\ta {\r\n\t\tcolor: color(typography, 2i);\r\n\t}\r\n}\r\n\r\n.text-light {\r\n\r\n\th1, h2, h3, h4, h5, h6,\r\n\t.h1, .h2, .h3, .h4, .h5, .h6 {\r\n\t\tcolor: color(typography, 1i) !important;\r\n\t}\r\n}\r\n\r\n.text-sm {\r\n\t@include font-size(6, mobile, true, true, true);\r\n\t@if ( get-font-size(6, desktop) != get-font-size(6, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(6, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.text-xs {\r\n\t@include font-size(7, mobile, true, true, true);\r\n\t@if ( get-font-size(7, desktop) != get-font-size(7, mobile) ) {\r\n\t\t@include media( '>medium' ) {\r\n\t\t\t@include font-size(7, desktop, true, true, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nh1, h2,\r\n.h1, .h2 {\r\n\tmargin-top: 48px;\r\n\tmargin-bottom: 16px;\r\n}\r\n\r\nh3,\r\n.h3 {\r\n\tmargin-top: 36px;\r\n\tmargin-bottom: 12px;\r\n}\r\n\r\nh4, h5, h6,\r\n.h4, .h5, .h6 {\r\n\tmargin-top: 24px;\r\n\tmargin-bottom: 4px;\r\n}\r\n\r\np {\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\ndfn, cite, em, i {\r\n\tfont-style: italic;\r\n}\r\n\r\nblockquote {\r\n\tcolor: color(typography, 3);\r\n\tfont-style: italic;\r\n\tmargin-top: 24px;\r\n\tmargin-bottom: 24px;\r\n\tmargin-left: 24px;\r\n\r\n\t&::before {\r\n\t\tcontent: \"\\201C\";\r\n\t}\r\n\r\n\t&::after {\r\n\t\tcontent: \"\\201D\";\r\n\t}\r\n\r\n\tp {\r\n\t\tdisplay: inline;\r\n\t}\r\n}\r\n\r\naddress {\r\n\tcolor: color(typography, 2);\r\n\tborder-width: 1px 0;\r\n\tborder-style: solid;\r\n\tborder-color: color(bg, 3);\r\n\tpadding: 24px 0;\r\n\tmargin: 0 0 24px;\r\n}\r\n\r\npre,\r\npre h1,\r\npre h2,\r\npre h3,\r\npre h4,\r\npre h5,\r\npre h6,\r\npre .h1,\r\npre .h2,\r\npre .h3,\r\npre .h4,\r\npre .h5,\r\npre .h6  {\r\n\t@include font-family(pre);\r\n}\r\n\r\npre, code, kbd, tt, var {\r\n\tbackground: color(bg, 2);\r\n}\r\n\r\npre {\r\n\t@include font-size(7, mobile, true, true);\r\n\tmargin-bottom: 1.6em;\r\n\tmax-width: 100%;\r\n\toverflow: auto;\r\n\tpadding: 24px;\r\n\tmargin-top: 24px;\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\ncode, kbd, tt, var {\r\n\t@include font-family(code);\r\n\t@include font-size(7, mobile, true);\r\n\tpadding: 2px 4px;\r\n}\r\n\r\nabbr, acronym {\r\n\tcursor: help;\r\n}\r\n\r\nmark, ins {\r\n\ttext-decoration: none;\r\n}\r\n\r\nsmall {\r\n\t@include font-size(6, mobile, true, true, true);\r\n}\r\n\r\nb,\r\nstrong {\r\n\t@include font-weight(bold);\r\n}\r\n\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea,\r\nlabel {\r\n\t@include font-size(5, mobile, true, true);\r\n}\r\n","html {\r\n  line-height: 1.15;\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\narticle,\r\naside,\r\nfooter,\r\nheader,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\nfigcaption,\r\nfigure,\r\nmain {\r\n  display: block;\r\n}\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n  overflow: visible;\r\n}\r\n\r\npre {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\na {\r\n  background-color: transparent;\r\n  -webkit-text-decoration-skip: objects;\r\n}\r\n\r\nabbr[title] {\r\n  border-bottom: none;\r\n  text-decoration: underline;\r\n  text-decoration: underline dotted;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: inherit;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n}\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\nmark {\r\n  background-color: #ff0;\r\n  color: #000;\r\n}\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\naudio,\r\nvideo {\r\n  display: inline-block;\r\n}\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\nimg {\r\n  border-style: none;\r\n}\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: sans-serif;\r\n  font-size: 100%;\r\n  line-height: 1.15;\r\n  margin: 0;\r\n}\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible;\r\n}\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\nbutton,\r\nhtml [type=\"button\"],\r\n[type=\"reset\"],\r\n[type=\"submit\"] {\r\n  -webkit-appearance: button;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\n[type=\"button\"]::-moz-focus-inner,\r\n[type=\"reset\"]::-moz-focus-inner,\r\n[type=\"submit\"]::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\nbutton:-moz-focusring,\r\n[type=\"button\"]:-moz-focusring,\r\n[type=\"reset\"]:-moz-focusring,\r\n[type=\"submit\"]:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n\r\nfieldset {\r\n  padding: 0.35em 0.75em 0.625em;\r\n}\r\n\r\nlegend {\r\n  box-sizing: border-box;\r\n  color: inherit;\r\n  display: table;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  white-space: normal;\r\n}\r\n\r\nprogress {\r\n  display: inline-block;\r\n  vertical-align: baseline;\r\n}\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n[type=\"checkbox\"],\r\n[type=\"radio\"] {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n}\r\n\r\n[type=\"number\"]::-webkit-inner-spin-button,\r\n[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n[type=\"search\"] {\r\n  -webkit-appearance: textfield;\r\n  outline-offset: -2px;\r\n}\r\n\r\n[type=\"search\"]::-webkit-search-cancel-button,\r\n[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button;\r\n  font: inherit;\r\n}\r\n\r\ndetails,\r\nmenu {\r\n  display: block;\r\n}\r\n\r\nsummary {\r\n  display: list-item;\r\n}\r\n\r\ncanvas {\r\n  display: inline-block;\r\n}\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n[hidden] {\r\n  display: none;\r\n}","html {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\r\n\tbox-sizing: inherit;\r\n}\r\n\r\nbody {\r\n\tbackground: color(bg, 1); /* Fallback for when there is no custom background color defined. */\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\t-webkit-font-smoothing: antialiased;\r\n}\r\n\r\nhr {\r\n\tborder: 0;\r\n\t@include divider();\r\n\tmargin-top: 24px;\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\nul, ol {\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 24px;\r\n\tpadding-left: 24px;\r\n}\r\n\r\nul {\r\n\tlist-style: disc;\r\n}\r\n\r\nol {\r\n\tlist-style: decimal;\r\n}\r\n\r\nli > ul,\r\nli > ol {\r\n\tmargin-bottom: 0;\r\n}\r\n\r\ndl {\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\ndt {\r\n\t@include font-weight(bold);\r\n}\r\n\r\ndd {\r\n\tmargin-left: 24px;\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\nimg {\r\n\theight: auto; /* Make sure images are scaled correctly. */\r\n\tmax-width: 100%; /* Adhere to container width. */\r\n\tvertical-align: middle;\r\n}\r\n\r\nfigure {\r\n\tmargin: 24px 0; /* Extra wide images within figure tags don't overflow the content area. */\r\n}\r\n\r\nfigcaption {\r\n\t@include font-size(7, mobile, true, true);\r\n\tpadding: 8px 0;\r\n}\r\n\r\nimg,\r\nsvg {\r\n\tdisplay: block;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tmargin-bottom: 24px;\r\n\twidth: 100%;\r\n}\r\n\r\ntr {\r\n\tborder-bottom: 1px solid color(bg, 3);\r\n}\r\n\r\nth {\r\n\ttext-align: left;\r\n}\r\n\r\nth,\r\ntd {\r\n\tpadding: 10px 16px;\r\n\r\n\t&:first-child {\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t&:last-child {\r\n\t\tpadding-right: 0;\r\n\t}\r\n}\r\n","// Font-size + Line-height + Kerning\r\n// Usage: @include font-size(1, mobile)\r\n// Add more true/false args to control what to output: font-size, line-height, kerning\r\n@mixin font-size($size, $elem, $font-size: true, $line-height: false, $kerning: false, $adjust-font-size: 0) {\r\n  @if not map-has-key(map-get($font__scale, $elem), $size) {\r\n    @warn \"'#{$size}' key does not exist in array!\";\r\n  }\r\n\r\n  @if ($font-size !=false) {\r\n    font-size: get-font-size($size, $elem) + $adjust-font-size;\r\n  }\r\n\r\n  @if ($line-height==true) {\r\n    line-height: get-line-height($size, $elem);\r\n  }\r\n\r\n  @if ($kerning==true) {\r\n    letter-spacing: get-kerning($size, $elem);\r\n  }\r\n}\r\n\r\n// Font Family\r\n@mixin font-family($elem) {\r\n  font-family: unquote(get-font-family($elem));\r\n}\r\n\r\n// Font Weight\r\n@mixin font-weight($elem) {\r\n  font-weight: get-font-weight($elem);\r\n}\r\n\r\n// Anchor aspect\r\n@mixin anchor-aspect($type: 'main') {\r\n  @if ($type=='main') {\r\n    // Base\r\n    color: inherit;\r\n    text-decoration: underline;\r\n\r\n    &:hover,\r\n    &:active {\r\n      outline: 0;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  @else if ($type=='header') {\r\n    color: color(typography, 2);\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:active {\r\n      color: color(typography, 1);\r\n    }\r\n  }\r\n\r\n  @else if ($type=='footer') {\r\n    color: color(typography, 2i);\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:active {\r\n      color: color(typography, 1i);\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin shadow {\r\n  box-shadow: 0 16px 48px color(bg, 3);\r\n\r\n  /* Edge fallback */\r\n  @supports(-ms-ime-align:auto) {\r\n    box-shadow: 0 16px 48px rgba(color(typography, 1), .12);\r\n  }\r\n}\r\n\r\n@mixin divider-mix {\r\n  display: block;\r\n  height: 1px;\r\n  background: color(bg, 3);\r\n  background: linear-gradient(to right, rgba(color(bg, 3), .1) 0, rgba(color(bg, 3), .6) 50%, rgba(color(bg, 3), .1) 100%);\r\n}\r\n\r\n@mixin divider($type: false) {\r\n  @if ($type=='before') {\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      @include divider-mix;\r\n    }\r\n  }\r\n\r\n  @else if ($type=='after') {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      @include divider-mix;\r\n    }\r\n  }\r\n\r\n  @else {\r\n    @include divider-mix;\r\n  }\r\n}","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: ('small': 480px,\r\n  'medium': 640px,\r\n  'large': 1024px,\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: ('screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: ('px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  }\r\n\r\n  @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix=='max'and $value <=$no-media-breakpoint-value) or ($prefix=='min'and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    }\r\n\r\n    @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension)>0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  }\r\n\r\n  @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator=='>' {\r\n    $value: $value + $interval;\r\n  }\r\n\r\n  @else if $operator=='<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start>$end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value)=='number' {\r\n    @return $value;\r\n  }\r\n\r\n  @else if type-of($value) !='string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character=='-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character=='+'or $first-character=='-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character=='.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character=='.' {\r\n      $digits: 1;\r\n    }\r\n\r\n    @else if $digits==0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    }\r\n\r\n    @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions)==0) or (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  }\r\n\r\n  @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}",".container,\r\n.container-sm {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n\tpadding-left: get-content-padding(mobile);\r\n\tpadding-right: get-content-padding(mobile);\r\n\r\n\t@include media( '>small' ) {\r\n\t\tpadding-left: get-content-padding(desktop);\r\n\t\tpadding-right: get-content-padding(desktop);\r\n\t}\r\n}\r\n\r\n.container {\r\n\tmax-width: $container__width + ( get-content-padding(desktop) * 2 );\r\n}\r\n\r\n.container-sm {\r\n\tmax-width: $container__width-sm + ( get-content-padding(desktop) * 2 );\r\n}\r\n\r\n.container {\r\n\r\n    .container-sm {\r\n\t\tmax-width: $container__width-sm;\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n    }\r\n}\r\n\r\n/* Text meant only for screen readers. */\r\n.screen-reader-text {\r\n\tclip: rect(1px, 1px, 1px, 1px);\r\n\tposition: absolute !important;\r\n\theight: 1px;\r\n\twidth: 1px;\r\n\toverflow: hidden;\r\n\tword-wrap: normal !important; /* Many screen reader and browser combinations announce broken words as they would appear visually. */\r\n\r\n\t&:focus {\r\n\t\tborder-radius: 2px;\r\n\t\tbox-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\r\n\t\tclip: auto !important;\r\n\t\tdisplay: block;\r\n\t\t@include font-size(9, mobile, true, false, true);\r\n\t    @if ( get-font-size(9, desktop) != get-font-size(9, mobile) ) {\r\n\t        @include media( '>medium' ) {\r\n\t            @include font-size(9, desktop, true, false, true);\r\n\t        }\r\n\t    }\r\n\t    @include font-weight(bold);\r\n\t    line-height: 16px;\r\n\t    text-transform: uppercase;\r\n\t    text-decoration: none;\r\n\t    background-color: color(bg, 1);\r\n\t    color: color(primary, 1) !important;\r\n\t    border: none;\r\n\t\theight: auto;\r\n\t\tleft: 8px;\r\n\t\tpadding: 16px 32px;\r\n\t\ttop: 8px;\r\n\t\twidth: auto;\r\n\t\tz-index: 100000;\r\n\t}\r\n}\r\n\r\n.list-reset {\r\n\tlist-style: none;\r\n\tpadding: 0;\r\n}\r\n\r\n.text-left {\r\n  text-align: left;\r\n}\r\n\r\n.text-center {\r\n  text-align: center;\r\n}\r\n\r\n.text-right {\r\n  text-align: right;\r\n}\r\n\r\n.text-primary {\r\n    color: color(primary, 1);\r\n}\r\n\r\n.text-secondary {\r\n    color: color(secondary, 1);\r\n}\r\n\r\n.has-top-divider {\r\n    @include divider(before);\r\n}\r\n\r\n.has-bottom-divider {\r\n    @include divider(after);\r\n}\r\n\r\n.m-0 {\r\n\tmargin: 0;\r\n}\r\n\r\n.mt-0 {\r\n\tmargin-top: 0;\r\n}\r\n\r\n.mr-0 {\r\n\tmargin-right: 0;\r\n}\r\n\r\n.mb-0 {\r\n\tmargin-bottom: 0;\r\n}\r\n\r\n.ml-0 {\r\n\tmargin-left: 0;\r\n}\r\n\r\n.m-8 {\r\n\tmargin: 8px;\r\n}\r\n\r\n.mt-8 {\r\n\tmargin-top: 8px;\r\n}\r\n\r\n.mr-8 {\r\n\tmargin-right: 8px;\r\n}\r\n\r\n.mb-8 {\r\n\tmargin-bottom: 8px;\r\n}\r\n\r\n.ml-8 {\r\n\tmargin-left: 8px;\r\n}\r\n\r\n.m-16 {\r\n\tmargin: 16px;\r\n}\r\n\r\n.mt-16 {\r\n\tmargin-top: 16px;\r\n}\r\n\r\n.mr-16 {\r\n\tmargin-right: 16px;\r\n}\r\n\r\n.mb-16 {\r\n\tmargin-bottom: 16px;\r\n}\r\n\r\n.ml-16 {\r\n\tmargin-left: 16px;\r\n}\r\n\r\n.m-24 {\r\n\tmargin: 24px;\r\n}\r\n\r\n.mt-24 {\r\n\tmargin-top: 24px;\r\n}\r\n\r\n.mr-24 {\r\n\tmargin-right: 24px;\r\n}\r\n\r\n.mb-24 {\r\n\tmargin-bottom: 24px;\r\n}\r\n\r\n.ml-24 {\r\n\tmargin-left: 24px;\r\n}\r\n\r\n.m-32 {\r\n\tmargin: 32px;\r\n}\r\n\r\n.mt-32 {\r\n\tmargin-top: 32px;\r\n}\r\n\r\n.mr-32 {\r\n\tmargin-right: 32px;\r\n}\r\n\r\n.mb-32 {\r\n\tmargin-bottom: 32px;\r\n}\r\n\r\n.ml-32 {\r\n\tmargin-left: 32px;\r\n}\r\n\r\n.m-40 {\r\n\tmargin: 40px;\r\n}\r\n\r\n.mt-40 {\r\n\tmargin-top: 40px;\r\n}\r\n\r\n.mr-40 {\r\n\tmargin-right: 40px;\r\n}\r\n\r\n.mb-40 {\r\n\tmargin-bottom: 40px;\r\n}\r\n\r\n.ml-40 {\r\n\tmargin-left: 40px;\r\n}\r\n\r\n.m-48 {\r\n\tmargin: 48px;\r\n}\r\n\r\n.mt-48 {\r\n\tmargin-top: 48px;\r\n}\r\n\r\n.mr-48 {\r\n\tmargin-right: 48px;\r\n}\r\n\r\n.mb-48 {\r\n\tmargin-bottom: 48px;\r\n}\r\n\r\n.ml-48 {\r\n\tmargin-left: 48px;\r\n}\r\n\r\n.m-56 {\r\n\tmargin: 56px;\r\n}\r\n\r\n.mt-56 {\r\n\tmargin-top: 56px;\r\n}\r\n\r\n.mr-56 {\r\n\tmargin-right: 56px;\r\n}\r\n\r\n.mb-56 {\r\n\tmargin-bottom: 56px;\r\n}\r\n\r\n.ml-56 {\r\n\tmargin-left: 56px;\r\n}\r\n\r\n.m-64 {\r\n\tmargin: 64px;\r\n}\r\n\r\n.mt-64 {\r\n\tmargin-top: 64px;\r\n}\r\n\r\n.mr-64 {\r\n\tmargin-right: 64px;\r\n}\r\n\r\n.mb-64 {\r\n\tmargin-bottom: 64px;\r\n}\r\n\r\n.ml-64 {\r\n\tmargin-left: 64px;\r\n}\r\n\r\n.p-0 {\r\n\tpadding: 0;\r\n}\r\n\r\n.pt-0 {\r\n\tpadding-top: 0;\r\n}\r\n\r\n.pr-0 {\r\n\tpadding-right: 0;\r\n}\r\n\r\n.pb-0 {\r\n\tpadding-bottom: 0;\r\n}\r\n\r\n.pl-0 {\r\n\tpadding-left: 0;\r\n}\r\n\r\n.p-8 {\r\n\tpadding: 8px;\r\n}\r\n\r\n.pt-8 {\r\n\tpadding-top: 8px;\r\n}\r\n\r\n.pr-8 {\r\n\tpadding-right: 8px;\r\n}\r\n\r\n.pb-8 {\r\n\tpadding-bottom: 8px;\r\n}\r\n\r\n.pl-8 {\r\n\tpadding-left: 8px;\r\n}\r\n\r\n.p-16 {\r\n\tpadding: 16px;\r\n}\r\n\r\n.pt-16 {\r\n\tpadding-top: 16px;\r\n}\r\n\r\n.pr-16 {\r\n\tpadding-right: 16px;\r\n}\r\n\r\n.pb-16 {\r\n\tpadding-bottom: 16px;\r\n}\r\n\r\n.pl-16 {\r\n\tpadding-left: 16px;\r\n}\r\n\r\n.p-24 {\r\n\tpadding: 24px;\r\n}\r\n\r\n.pt-24 {\r\n\tpadding-top: 24px;\r\n}\r\n\r\n.pr-24 {\r\n\tpadding-right: 24px;\r\n}\r\n\r\n.pb-24 {\r\n\tpadding-bottom: 24px;\r\n}\r\n\r\n.pl-24 {\r\n\tpadding-left: 24px;\r\n}\r\n\r\n.p-32 {\r\n\tpadding: 32px;\r\n}\r\n\r\n.pt-32 {\r\n\tpadding-top: 32px;\r\n}\r\n\r\n.pr-32 {\r\n\tpadding-right: 32px;\r\n}\r\n\r\n.pb-32 {\r\n\tpadding-bottom: 32px;\r\n}\r\n\r\n.pl-32 {\r\n\tpadding-left: 32px;\r\n}\r\n\r\n.p-40 {\r\n\tpadding: 40px;\r\n}\r\n\r\n.pt-40 {\r\n\tpadding-top: 40px;\r\n}\r\n\r\n.pr-40 {\r\n\tpadding-right: 40px;\r\n}\r\n\r\n.pb-40 {\r\n\tpadding-bottom: 40px;\r\n}\r\n\r\n.pl-40 {\r\n\tpadding-left: 40px;\r\n}\r\n\r\n.p-48 {\r\n\tpadding: 48px;\r\n}\r\n\r\n.pt-48 {\r\n\tpadding-top: 48px;\r\n}\r\n\r\n.pr-48 {\r\n\tpadding-right: 48px;\r\n}\r\n\r\n.pb-48 {\r\n\tpadding-bottom: 48px;\r\n}\r\n\r\n.pl-48 {\r\n\tpadding-left: 48px;\r\n}\r\n\r\n.p-56 {\r\n\tpadding: 56px;\r\n}\r\n\r\n.pt-56 {\r\n\tpadding-top: 56px;\r\n}\r\n\r\n.pr-56 {\r\n\tpadding-right: 56px;\r\n}\r\n\r\n.pb-56 {\r\n\tpadding-bottom: 56px;\r\n}\r\n\r\n.pl-56 {\r\n\tpadding-left: 56px;\r\n}\r\n\r\n.p-64 {\r\n\tpadding: 64px;\r\n}\r\n\r\n.pt-64 {\r\n\tpadding-top: 64px;\r\n}\r\n\r\n.pr-64 {\r\n\tpadding-right: 64px;\r\n}\r\n\r\n.pb-64 {\r\n\tpadding-bottom: 64px;\r\n}\r\n\r\n.pl-64 {\r\n\tpadding-left: 64px;\r\n}\r\n\r\n/* Reveal animations */\r\n.sr {\r\n\r\n\t.has-animations {\r\n\r\n\t\t.is-revealing {\r\n\t\t\tvisibility: hidden;\r\n\t\t}\r\n\t}\r\n}\r\n","// --------------------------------------------\r\n// Colors -------------------------------------\r\n// Usage example: color(primary, main)\r\n// --------------------------------------------\r\n$color: (typography: (1: #202b36,\r\n    2: #27323a,\r\n    3: #92a2b1,\r\n    1i: #fff,\r\n    2i: rgba(#fff, 0.8),\r\n  ),\r\n  bg: (1: #f0f4f8,\r\n    2: #f6f8fa,\r\n    3: #e3e7eb,\r\n  ),\r\n  primary: (1: #627d98,\r\n    2: #9fb3c8,\r\n    3: #334e68,\r\n  ),\r\n  secondary: (1: #838dea,\r\n    2: #a0a6ee,\r\n    3: #626cd5,\r\n  ),\r\n  themes: (1: #c4c6ff,\r\n    2: #b6e0fe,\r\n    3: #fce588,\r\n    4: #ffb088,\r\n    5: #ffb8d2,\r\n    6: #caff84,\r\n  ));\r\n\r\n// --------------------------------------------\r\n// Typography ---------------------------------\r\n// --------------------------------------------\r\n$font__family: (base: '\"Lato\", sans-serif',\r\n  // font-family(base)\r\n  heading: '\"Roboto\", sans-serif',\r\n  // font-family(heading)\r\n  code: 'Monaco, Consolas, \"Andale Mono\", \"DejaVu Sans Mono\", monospace',\r\n  // font-family(code)\r\n  pre: '\"Courier 10 Pitch\", Courier, monospace' // font-family(pre),\r\n);\r\n\r\n$font__sizes: (alpha: (42px, 52px, -0.1px), // font-size, line-height, kerning (use '0' if don't want to output any kerning)\r\n  beta: (36px, 46px, -0.2px),\r\n  gamma: (30px, 40px, -0.1px),\r\n  delta: (20px, 30px, -0.1px),\r\n  epsilon: (18px, 27px, -0.1px),\r\n  zeta: (16px, 24px, -0.1px),\r\n  eta: (14px, 20px, 0px),\r\n  theta: (13px, 18px, 0px));\r\n\r\n$font__scale: (desktop: ( // i.e. $breakpoint__m + $breakpoint__l (600 - 1024)\r\n    1: map-get($font__sizes, alpha),\r\n    // H1\r\n    2: map-get($font__sizes, beta),\r\n    // H2\r\n    3: map-get($font__sizes, gamma),\r\n    // H3\r\n    4: map-get($font__sizes, delta),\r\n    // H4, H5, H6\r\n    5: map-get($font__sizes, delta),\r\n    // Body\r\n    6: map-get($font__sizes, epsilon),\r\n    // Text small (e.g. features description)\r\n    7: map-get($font__sizes, zeta),\r\n    // Text smaller (e.g. pricing table's lists)\r\n    8: map-get($font__sizes, eta),\r\n    // Footer area\r\n    9: map-get($font__sizes, theta) // Header links, buttons,\r\n  ),\r\n  mobile: ( // i.e. $breakpoint__xs + $breakpoint__s (up to 600)\r\n    1: map-get($font__sizes, beta),\r\n    // H1\r\n    2: map-get($font__sizes, gamma),\r\n    // H2\r\n    3: map-get($font__sizes, delta),\r\n    // H3\r\n    4: map-get($font__sizes, epsilon),\r\n    // H4, H5, H6\r\n    5: map-get($font__sizes, epsilon),\r\n    // Body\r\n    6: map-get($font__sizes, epsilon),\r\n    // Text small (e.g. features description)\r\n    7: map-get($font__sizes, zeta),\r\n    // Text smaller (e.g. pricing table's lists)\r\n    8: map-get($font__sizes, eta),\r\n    // Footer area\r\n    9: map-get($font__sizes, theta) // Header links, buttons,\r\n  ),\r\n);\r\n\r\n$font__weight: (regular: 400,\r\n  // font__weight(regular)\r\n  medium: 500,\r\n  // font__weight(medium)\r\n  semibold: 600,\r\n  // font__weight(semi-bold)\r\n  bold: 700 // font__weight(bold),\r\n);\r\n\r\n// --------------------------------------------\r\n// Structure ----------------------------------\r\n// --------------------------------------------\r\n$content__padding: (mobile: 16px,\r\n  desktop: 24px,\r\n);\r\n$container__width: 1080px;\r\n$container__width-sm: 800px;",".button {\r\n  display: inline-flex;\r\n  @include font-size(9, mobile, true, false, true);\r\n\r\n  @if (get-font-size(9, desktop) !=get-font-size(9, mobile)) {\r\n    @include media('>medium') {\r\n      @include font-size(9, desktop, true, false, true);\r\n    }\r\n  }\r\n\r\n  @include font-weight(bold);\r\n  line-height: 16px;\r\n  text-transform: uppercase;\r\n  text-decoration: none !important;\r\n  background-color: color(bg, 1);\r\n  color: color(primary, 1) !important;\r\n  border: none;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  justify-content: center;\r\n  padding: 16px 32px;\r\n  height: 48px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n\r\n  &:active {\r\n    outline: 0;\r\n  }\r\n\r\n  &::before {\r\n    border-radius: 2px;\r\n  }\r\n}\r\n\r\n.button-shadow {\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-shadow: 0 8px 24px rgba(color(typography, 1), .12);\r\n    mix-blend-mode: multiply;\r\n    transition: box-shadow .15s ease;\r\n  }\r\n\r\n  &:hover {\r\n\r\n    &::before {\r\n      box-shadow: 0 8px 24px rgba(color(typography, 1), .25);\r\n    }\r\n  }\r\n}\r\n\r\n.button-sm {\r\n  padding: 8px 24px;\r\n  height: 32px;\r\n\r\n  &.button-shadow {\r\n\r\n    &::before {\r\n      box-shadow: 0 4px 16px rgba(color(typography, 1), .12);\r\n    }\r\n\r\n    &:hover {\r\n\r\n      &::before {\r\n        box-shadow: 0 4px 16px rgba(color(typography, 1), .25);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.button-primary {\r\n  color: color(typography, 1i) !important;\r\n  transition: background .15s ease;\r\n}\r\n\r\n.button-primary {\r\n  background: mix(color(primary, 3), color(primary, 1));\r\n  background: linear-gradient(65deg, color(primary, 3) 0, color(primary, 1) 100%);\r\n\r\n  &:hover {\r\n    background: lighten(mix(color(primary, 3), color(primary, 1)), 1%);\r\n    background: linear-gradient(65deg, lighten(color(primary, 3), 1%) 0, lighten(color(primary, 1), 1%) 100%);\r\n  }\r\n}\r\n\r\n.button-block {\r\n  display: flex;\r\n}",".is-boxed {\r\n  background: color(bg, 2);\r\n}\r\n\r\n.body-wrap {\r\n  background: color(bg, 1);\r\n  overflow: hidden;\r\n  /* Sticky footer */\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.boxed-container {\r\n  max-width: 1440px;\r\n  margin: 0 auto;\r\n  @include shadow;\r\n}\r\n\r\nmain {\r\n  flex: 1 0 auto;\r\n}\r\n\r\n.section-inner {\r\n  position: relative;\r\n  /* To always display inner elements above pseudo decorative stuff */\r\n  padding-top: 48px;\r\n  padding-bottom: 48px;\r\n}\r\n\r\n@include media('>medium') {\r\n\r\n  .section-inner {\r\n    padding-top: 80px;\r\n    padding-bottom: 80px;\r\n  }\r\n}","#navBar {\r\n  text-decoration: none;\r\n}\r\n\r\n.header-svg {\r\n  content: '';\r\n  position: absolute;\r\n  top: -40px;\r\n  left: 20%;\r\n  width: 100%;\r\n  background-size: 1140px 500px;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.site-header {\r\n  position: relative;\r\n  padding: 24px 0;\r\n}\r\n\r\n.site-header-inner {\r\n  position: relative;\r\n  /* To display all elements above the background color */\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-links {\r\n  display: inline-flex;\r\n\r\n  li {\r\n    display: inline-flex;\r\n  }\r\n\r\n  a:not(.button) {\r\n    @include font-size(9, mobile, true, true, true);\r\n\r\n    @if (get-font-size(9, desktop) !=get-font-size(9, mobile)) {\r\n      @include media('>medium') {\r\n        @include font-size(9, desktop, true, true, true);\r\n      }\r\n    }\r\n\r\n    @include font-weight(bold);\r\n    @include anchor-aspect(header);\r\n    line-height: 16px;\r\n    padding: 8px 24px;\r\n  }\r\n}\r\n\r\n@include media('>medium') {\r\n  .site-header {\r\n    position: relative;\r\n    padding: 24px 0;\r\n\r\n    &::before {\r\n      top: -50%;\r\n      left: 20%;\r\n      width: 80%;\r\n      height: 651px;\r\n      background-size: 1480px 651px;\r\n    }\r\n  }\r\n}\r\n\r\n.brand {\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n#overlay {\r\n  z-index: 2;\r\n  position: absolute;\r\n  right: 0%;\r\n  top: 50px;\r\n}\r\n\r\n\r\n#overlay a:not(:first-child) {\r\n  margin: 50px 0 0;\r\n}\r\n\r\n#overlay a {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n\r\n#overlay a:hover {\r\n  opacity: 0.5;\r\n}\r\n\r\n#overlay {\r\n  i {\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n.close {\r\n  display: none;\r\n}",".hero {\r\n  position: relative;\r\n  padding-top: 140px;\r\n  padding-bottom: 40px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n\r\n.hero-paragraph {\r\n  color: color(typography, 2);\r\n  max-width: 400px;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.hero-inner {\r\n  button {\r\n    font-weight: 400;\r\n  }\r\n}",".themes {\r\n  display: none;\r\n\r\n  @include media('>large') {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 1124px;\r\n    margin: auto;\r\n    margin-top: 25vh;\r\n    align-items: center;\r\n  }\r\n}\r\n\r\n.theme-1,\r\n.theme-2,\r\n.theme-3,\r\n.theme-4,\r\n.theme-5,\r\n.theme-6 {\r\n  width: 130px;\r\n  height: 130px;\r\n  border-radius: 100px;\r\n  cursor: pointer;\r\n}\r\n\r\n.theme-1 {\r\n  background: color(themes, 1);\r\n  @include shadow\r\n}\r\n\r\n.theme-2 {\r\n  background: color(themes, 2);\r\n  @include shadow\r\n}\r\n\r\n.theme-3 {\r\n  background: color(themes, 3);\r\n  @include shadow\r\n}\r\n\r\n.theme-4 {\r\n  background: color(themes, 4);\r\n  @include shadow\r\n}\r\n\r\n.theme-5 {\r\n  background: color(themes, 5);\r\n  @include shadow\r\n}\r\n\r\n.theme-6 {\r\n  background: color(themes, 6);\r\n  @include shadow\r\n}"]}